@model PagedList.IPagedList<ms_tech.ViewModels.IncidentesViewModel>
@using PagedList.Mvc;
@using ms_tech.Helpers;

@{
    ViewBag.Title = "Lista de Incidentes";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.IconButton("Nuevo Incidente", "Create", "Incidentes", null, null, "")
</p>
@using (Html.BeginForm("Index", "Incidentes", FormMethod.Get))
{
    <p>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @style = "display:inline-block", @placeholder = "Filtro" })
        @Html.BotonBuscar()
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Cliente", "Index", new { sortOrder = ViewBag.Cliente, currentFilter = ViewBag.CurrentFilter })
        </th>

        <th>
            @Html.ActionLink("Usuario", "Index", new { sortOrder = ViewBag.Usuario, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Producto", "Index", new { sortOrder = ViewBag.Producto, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Problema", "Index", new { sortOrder = ViewBag.Problema, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.Fecha, currentFilter = ViewBag.CurrentFilter })
        </th>
      
        <th>
            @Html.ActionLink("Prioridad", "Index", new { sortOrder = ViewBag.Prioridad, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Estado", "Index", new { sortOrder = ViewBag.Estado, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Clientes.Nombre)
                @Html.DisplayFor(modelItem => item.Clientes.Apellido)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Usuarios.Nombre)
                @Html.DisplayFor(modelItem => item.Usuarios.Apellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Productos.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Problemas.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            
            <td>
                @{
        switch (item.IdPrioridad)
        {
            case 1:
                <text>Baja</text>;
                break;
            case 2:
            <text>Media</text>;
            break;
            case 3:
            <text>Alta</text>;
            break;
            default:
            break;
        }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estados.Nombre)
            </td>
            <td>
                @Html.ImageActionLink("Editar Estado", "EditarEstado", "Incidentes", new { id = item.IdIncidente }, null, "estado.png") |
                @Html.ImageActionLink("Editar", "Edit", "Incidentes", new { id = item.IdIncidente }, null) |
                @Html.ImageActionLink("Detalles", "Details", "Incidentes", new { id = item.IdIncidente }, null) 
            
               
            </td>
        </tr>
    }

</table>
<br />
@{
    if (Model.PageCount > 1)
    {
        <text>Página</text> @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) <text>de</text> @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
}