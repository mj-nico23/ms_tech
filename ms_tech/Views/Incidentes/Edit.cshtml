@model ms_tech.ViewModels.IncidentesViewModel
@using ms_tech.Helpers;

@{
    ViewBag.Title = "Editar";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Incidentes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdIncidente)

        <div class="form-group">
            @Html.LabelFor(model => model.IdUsuario, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdUsuario", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCliente", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdProducto, "Producto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdProducto", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdProblema, "Problema", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdProblema", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdProblema, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripcion, 5, 55, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdPrioridad, "Prioridad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdPrioridad", (IEnumerable<SelectListItem>)ViewBag.IdPrioridad, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdPrioridad, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.IconButton("Volver", "Index", "Incidentes", null, null, "")
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                autoclose: true
            });

            //Dropdownlist Selectedchange event
            $("#IdProducto").change(function () {

                $("#IdProblema").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetProblemas", "Soluciones")', // we are calling json method

                    dataType: 'json',

                    data: { id: $("#IdProducto").val() },
                    // here we are get value of selected Producto and passing same value as inputto json method GetProblemas.

                    success: function (problemas) {
                        // states contains the JSON formatted list
                        // of states passed from the controller

                        $.each(problemas, function (i, problema) {
                            $("#IdProblema").append('<option value="' + problema.Value + '">' + problema.Text + '</option>');
                            // here we are adding option for States

                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener problemas.' + ex);
                    }
                });
                return false;
            });

            $('#IdProducto').trigger('change');
        });
    </script>
}