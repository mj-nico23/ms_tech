@model PagedList.IPagedList<ms_tech.Models.Clientes>
@using PagedList.Mvc;
@using ms_tech.Helpers;

@{
    ViewBag.Title = "Lista de Clientes";
}

<h2>@ViewBag.Title</h2>

<p>

    @Html.IconButton("Nuevo Cliente", "Create", "Clientes", null, null, "")

</p>
@using (Html.BeginForm("Index", "Clientes", FormMethod.Get))
{
    <p>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @style = "display:inline-block", @placeholder = "Filtro", @autocomplete = "off" })
        @Html.BotonBuscar()
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Tipo de Cliente", "Index", new { sortOrder = ViewBag.TipoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Nombre", "Index", new { sortOrder = ViewBag.NombreSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Apellido", "Index", new { sortOrder = ViewBag.ApellidoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Activo", "Index", new { sortOrder = ViewBag.ActivoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Dirección", "Index", new { sortOrder = ViewBag.DireccionSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Teléfono", "Index", new { sortOrder = ViewBag.TelefonoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ClientesTipos.Nombre)
            </td>

            <td title="@(item.Nombre.Length>30 ? item.Nombre: "")">
                @(item.Nombre.Length > 30 ? item.Nombre.Substring(0, 30) + "..." : item.Nombre)
            </td>
            <td title="@(item.Apellido.Length>30 ? item.Apellido: "")">
                @(item.Apellido.Length > 30 ? item.Apellido.Substring(0, 30) + "..." : item.Apellido)
            </td>
            <td title="@(item.Mail.Length>30 ? item.Mail: "")">
                @(item.Mail.Length > 30 ? item.Mail.Substring(0, 30) + "..." : item.Mail)
            </td>
            <td>
                @(item.Activo ? "Si" : "No")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefono)
            </td>

            <td>
                @Html.ImageActionLink("Editar", "Edit", "Clientes", new { id = item.IdCliente }, null) |
                @Html.ImageActionLink("Detalles", "Details", "Clientes", new { id = item.IdCliente }, null) |
                @Html.ImageActionLink("Eliminar", "Delete", "Clientes", new { id = item.IdCliente }, null)
            </td>
        </tr>
    }

</table>

@{
    if (Model.PageCount > 1)
    {
        <text>Página</text> @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) <text>de</text> @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
}

