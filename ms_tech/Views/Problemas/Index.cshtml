@model PagedList.IPagedList<ms_tech.Models.Problemas>
@using PagedList.Mvc;
@using ms_tech.Helpers;

@{
    ViewBag.Title = "Lista de Problemas";
}

<h2>@ViewBag.Title</h2>

<p>
    @using (Html.BeginForm("Index", "Problemas", FormMethod.Get))
    {
        @Html.IconButton("Nuevo Problema", "Create", "Problemas", null, null, "")
        <text> </text>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @style = "display:inline-block", @placeholder = "Filtro", @autocomplete = "off" })
        <text> </text>
        @Html.BotonBuscar()
    }
</p>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Producto", "Index", new { sortOrder = ViewBag.ProductoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Nombre", "Index", new { sortOrder = ViewBag.NombreSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Activo", "Index", new { sortOrder = ViewBag.ActivoSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Productos.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @(item.Activo ? "Si" : "No")
            </td>
            <td>
                @Html.ImageActionLink("Editar", "Edit", "Problemas", new { id = item.IdProblema }, null) |
                @Html.ImageActionLink("Detalles", "Details", "Problemas", new { id = item.IdProblema }, null) |
                @Html.ImageActionLink("Eliminar", "Delete", "Problemas", new { id = item.IdProblema }, null)
            </td>
        </tr>
    }
</table>
@{
    if (Model.PageCount > 1)
    {
        <text>Página</text> @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) <text>de</text> @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
}